name: Django Group CI/CD

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11']

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install django  # Explicitly install Django to prevent import errors
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          fi
          pip install pylint

      - name: Run Pylint
        run: |
          pylint $(git ls-files "*.py")

  test:
    needs: [lint]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install django  # Explicitly install Django
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          fi
          pip install coverage pytest

      - name: Run Django tests with coverage
        run: |
          echo "Running Django tests..."
          coverage run -m pytest
        continue-on-error: true

      - name: Show coverage report
        if: always()
        run: |
          coverage report -m

  deploy:
    needs: [test]
    runs-on: ubuntu-latest
    if: success() && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Simulate deployment
        run: |
          echo "Deploying to production..."
          # Add your real deployment commands here if needed