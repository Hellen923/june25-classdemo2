name: Python Test

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11']
    env:
      VENV: venv

    # Explicit permissions
    permissions:
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Set up virtual environment and install dependencies
        run: |
          python -m venv $VENV
          source $VENV/bin/activate
          if [ ! -f requirements.txt ]; then echo "Error: requirements.txt not found!" && exit 1; fi
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install pylint coverage pytest

      - name: Run tests with coverage
        run: |
          source $VENV/bin/activate
          if ! ls june25_classdemo2/test_*.py 2>/dev/null; then echo "Warning: No test files found in june25_classdemo2/"; fi
          coverage run -m pytest || echo "Tests failed but continuing for linting"
          coverage report -m
        continue-on-error: true

      - name: Run Pylint
        run: |
          source $VENV/bin/activate
          if [ -d june25_classdemo2/ ]; then
            pylint june25_classdemo2/ --ignore=tests || echo "Pylint failed but continuing"
          else
            echo "Error: june25_classdemo2/ directory not found!"
            exit 1
          fi
        continue-on-error: true

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results-${{ matrix.python-version }}
          path: .coverage

      - name: Notify on failure
        if: failure()
        uses: slackapi/slack-github-action@v1.23.0
        with:
          payload: |
            {
              "text": "‚ùå Python Test failed on Python ${{ matrix.python-version }}.\nüîó [View Run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}